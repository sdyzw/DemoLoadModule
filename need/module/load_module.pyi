# This file was generated by Nuitka and describes the types of the
# created shared library.

# At this time it lists only the imports made and can be used by the
# tools that bundle libraries, including Nuitka itself. For instance
# standalone mode usage of the created library will need it.

# In the future, this will also contain type information for values
# in the module, so IDEs will use this. Therefore please include it
# when you make software releases of the extension module that it
# describes.
from types import ModuleType



class Modules:
    setting = None
    def reload(self, module: ModuleType):
        pass
    
    @property
    def alls(self):
        pass

    def get(self, moduleName) -> ModuleType:
        pass

    def append(self, module: Union[ModuleType, str]) -> Union[ModuleType, None]:
        pass

    def update_module(self, py_file_path) -> ModuleType:
        pass

    def remove(self, module: ModuleType) :
        pass

    def clear(self):
        pass

    def start_loading(self, callback=None):
        pass



modules: Modules = None


def instance(): # module(None) -> Modules()
    pass
    
# modules.setting
    

# This is not Python source even if it looks so. Make it clear for
# now. This was decided by PEP 484 designers.
__name__ = ...
